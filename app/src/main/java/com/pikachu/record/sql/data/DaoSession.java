package com.pikachu.record.sql.data;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.pikachu.record.sql.table.Account;
import com.pikachu.record.sql.table.AppOne;
import com.pikachu.record.sql.table.Diary;
import com.pikachu.record.sql.table.Mood;
import com.pikachu.record.sql.table.Task;

import com.pikachu.record.sql.data.AccountDao;
import com.pikachu.record.sql.data.AppOneDao;
import com.pikachu.record.sql.data.DiaryDao;
import com.pikachu.record.sql.data.MoodDao;
import com.pikachu.record.sql.data.TaskDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accountDaoConfig;
    private final DaoConfig appOneDaoConfig;
    private final DaoConfig diaryDaoConfig;
    private final DaoConfig moodDaoConfig;
    private final DaoConfig taskDaoConfig;

    private final AccountDao accountDao;
    private final AppOneDao appOneDao;
    private final DiaryDao diaryDao;
    private final MoodDao moodDao;
    private final TaskDao taskDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accountDaoConfig = daoConfigMap.get(AccountDao.class).clone();
        accountDaoConfig.initIdentityScope(type);

        appOneDaoConfig = daoConfigMap.get(AppOneDao.class).clone();
        appOneDaoConfig.initIdentityScope(type);

        diaryDaoConfig = daoConfigMap.get(DiaryDao.class).clone();
        diaryDaoConfig.initIdentityScope(type);

        moodDaoConfig = daoConfigMap.get(MoodDao.class).clone();
        moodDaoConfig.initIdentityScope(type);

        taskDaoConfig = daoConfigMap.get(TaskDao.class).clone();
        taskDaoConfig.initIdentityScope(type);

        accountDao = new AccountDao(accountDaoConfig, this);
        appOneDao = new AppOneDao(appOneDaoConfig, this);
        diaryDao = new DiaryDao(diaryDaoConfig, this);
        moodDao = new MoodDao(moodDaoConfig, this);
        taskDao = new TaskDao(taskDaoConfig, this);

        registerDao(Account.class, accountDao);
        registerDao(AppOne.class, appOneDao);
        registerDao(Diary.class, diaryDao);
        registerDao(Mood.class, moodDao);
        registerDao(Task.class, taskDao);
    }
    
    public void clear() {
        accountDaoConfig.clearIdentityScope();
        appOneDaoConfig.clearIdentityScope();
        diaryDaoConfig.clearIdentityScope();
        moodDaoConfig.clearIdentityScope();
        taskDaoConfig.clearIdentityScope();
    }

    public AccountDao getAccountDao() {
        return accountDao;
    }

    public AppOneDao getAppOneDao() {
        return appOneDao;
    }

    public DiaryDao getDiaryDao() {
        return diaryDao;
    }

    public MoodDao getMoodDao() {
        return moodDao;
    }

    public TaskDao getTaskDao() {
        return taskDao;
    }

}
